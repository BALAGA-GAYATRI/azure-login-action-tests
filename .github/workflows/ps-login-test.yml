name: Run Azure Login  PS
on: workflow_dispatch

permissions:
      id-token: write
      contents: write
jobs: 
  az-login-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
  
      - name: Set Parameter
        id: tasksetparameter
        uses: azure/powershell@v1
        with:
            inlineScript: |
                  Write-Output ::set-output name=myparam::'test'
            azPSVersion: "latest"

      - name: Read Parameter
        uses: azure/powershell@v1
        with:
           inlineScript: |
             Write-Output "${{ steps.tasksetparameter.outputs.myparam }}"
           azPSVersion: "latest"
        
#       - name: Installing CLI-beta for OIDC
#         run: |
#            cd /home/runner/work
#            CWD="$(pwd)"  
#            python3 -m venv oidc-venv
#            . oidc-venv/bin/activate
#            echo "activated environment" 
#            python3 -m pip install -q --upgrade pip
#            echo "started installing cli beta"
#            pip install --extra-index-url https://azcliprod.blob.core.windows.net/beta/simple/ --upgrade azure-cli
#            echo "***************installed cli beta*******************" 
#            echo "$CWD/oidc-venv/bin" >> $GITHUB_PATH
           
#       - name: Installing preview Az.accounts for powershell
#         shell: pwsh
#         run: |
#           cd /home/runner/work/oidc-venv
#           Invoke-WebRequest -Uri https://azposhpreview.blob.core.windows.net/public/Az.Accounts.2.6.0.nupkg -outfile "Az.Accounts.2.6.0.nupkg"
#           Register-PSRepository -Name LocalPSRepo -SourceLocation '/home/runner/work/oidc-venv' -ScriptSourceLocation '/home/runner/work/oidc-venv' -InstallationPolicy Trusted
#           Install-Module Az.Accounts -Repository LocalPSRepo
          
      - name: 'Az CLI login'
        uses: azure/login@v1 #'balaga-gayatri/login@oidc-support-ps'
        with:
#           client-id: ${{ secrets.AZURE_CLIENTID }}
#           tenant-id: ${{ secrets.AZURE_TENANTID }}
#           subscription-id: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          creds: ${{ secrets.AZURE_LATEST_CREDENTIALS }}
#           allow-no-subscriptions: true
          enable-AzPSSession: true
#           environment: azureusgovernment

      - name: 'Create a RG with powershell action'
        uses: azure/powershell@v1
        with:
           inlineScript: |
             Get-AzResourceGroup
             New-AzResourceGroup -Name RGtestOIDCfinal -Location "South Central US" 
           azPSVersion: "latest"
