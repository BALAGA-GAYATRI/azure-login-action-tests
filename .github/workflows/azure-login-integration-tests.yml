name: Run Azure Login Integration Tests
on: 
  workflow_dispatch:
  schedule:
    - cron:  '0 */3 * * *'
permissions:
      id-token: write
      contents: write

jobs: 

  az-login-test-non-oidc:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: 'Az CLI login with subscription'
        uses: azure/login@v1.4.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - run: |
          az account show
#          az webapp list
          
      - name: 'Az CLI login without subscription'
        uses: azure/login@v1.4.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_NO_SUB }}
          allow-no-subscriptions: true
          
      - run: |
          az account show
          
      - name: 'Azure PowerShell login with subscription'
        uses: azure/login@v1.4.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - uses: azure/powershell@v1
        with:
          inlineScript: "Get-AzContext"
          azPSVersion: "latest"
          
      - name: 'Azure PowerShell login without subscription'
        uses: azure/login@v1.4.0
        with:
          creds: ${{secrets.AZURE_CREDENTIALS_NO_SUB}}
          enable-AzPSSession: true
          allow-no-subscriptions: true
        
      - uses: azure/powershell@v1
        with:
          inlineScript: "Get-AzContext"
          azPSVersion: "latest"

  az-login-test-oidc:

    runs-on: ubuntu-latest
    steps:
      # windows CLI installation 
      - name: Install CLI-beta
        run: |
            cd ../..
             CWD="$(pwd)"
             python3 -m venv oidc-venv
             . oidc-venv/bin/activate
             echo "activated environment" 
             python3 -m pip install --upgrade pip
             echo "started installing cli beta" 
             pip install -q --extra-index-url https://azcliprod.blob.core.windows.net/beta/simple/ azure-cli
             echo "installed cli beta"    
             echo "$CWD/oidc-venv/bin" >> $GITHUB_PATH 
             
      # - name: Installing preview Az.accounts for powershell
      #   shell: pwsh
      #   run: |
      #     cd ../../oidc-venv
      #     Invoke-WebRequest -Uri https://azposhpreview.blob.core.windows.net/public/Az.Accounts.2.6.0.nupkg -outfile "Az.Accounts.2.6.0.nupkg"
      #     Register-PSRepository -Name LocalPSRepo -SourceLocation "$(pwd)" -ScriptSourceLocation "$(pwd)" -InstallationPolicy Trusted
      #     Install-Module Az.Accounts -Repository LocalPSRepo

      - name: Installing Az.accounts for powershell
        shell: pwsh
        run: |
            Install-Module -Name Az.Accounts -Force -AllowClobber -Repository PSGallery

      - name: 'Az CLI login with subscription'
        uses: azure/login@v1.4.0
        with:
          client-id: ${{ secrets.AZURE_CLIENTID }}
          tenant-id: ${{ secrets.AZURE_TENANTID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTIONID }} 
        
      - run: |
          az account show
#          az webapp list
          
      - name: 'Az CLI login without subscription'
#         uses: azure/login@v1.4.0
        with:
          client-id: ${{ secrets.AZURE_CLIENTID }}
          tenant-id: ${{ secrets.AZURE_TENANTID }}
          allow-no-subscriptions: true
          
      - run: |
          az account show
          
      - name: 'Azure PowerShell login with subscription'
        uses: azure/login@v1.4.0
        with:
          client-id: ${{ secrets.AZURE_CLIENTID }}
          tenant-id: ${{ secrets.AZURE_TENANTID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTIONID }} 
          enable-AzPSSession: true
          
      - uses: azure/powershell@v1
        with:
          inlineScript: "Get-AzContext"
          azPSVersion: "latest"
          
      - name: 'Azure PowerShell login without subscription'
        uses: azure/login@v1.4.0
        with:
          client-id: ${{ secrets.AZURE_CLIENTID }}
          tenant-id: ${{ secrets.AZURE_TENANTID }}
          enable-AzPSSession: true
          allow-no-subscriptions: true
        
      - uses: azure/powershell@v1
        with:
          inlineScript: "Get-AzContext"
          azPSVersion: "latest"
          
  slack-post-result:
        runs-on: ubuntu-latest
        continue-on-error: true
        needs: [az-login-test-non-oidc, az-login-test-oidc]
        steps:
          - name: Create slack post
            id: slack_report
            run: |
              TITLE="Login action OIDC flow tests update - "
              DATEVAR=`date "+%d/%m/%Y"`
              TITLE="${TITLE}${DATEVAR}"
              REPORT="${TITLE}\r\nLink to run - https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\r\n" 
              RUN_URL="https://github.com/$GITHUB_REPOSITORY/actions/runs/"
              REPORT="${REPORT}\r\n"
              if [ ${{needs.az-login-test-non-oidc.result}} == 'success' ]; then REPORT="${REPORT}\r\n|✔️|<${RUN_URL}|az-login-test-non-oidc>"; else REPORT="${REPORT}\r\n|❌|"; fi
              if [ ${{needs.az-login-test-oidc.result}} == 'success' ]; then REPORT="${REPORT}\r\n|✔️|<${RUN_URL}|az-login-test-oidc>"; else REPORT="${REPORT}\r\n|❌|"; fi
              echo "::set-output name=report::$REPORT"

          - name: Post to slack
            shell: bash
            run: curl -X POST -H 'Content-type:application/json' --data '{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"${{steps.slack_report.outputs.report}}"}}]}' https://hooks.slack.com/services/${{SECRETS.SLACK_CHANNEL_SECRET}}

